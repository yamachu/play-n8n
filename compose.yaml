services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 5s
      retries: 10
    networks:
      - n8n-networks

  n8n:
    build:
      context: ./custom
      dockerfile: ../Dockerfile.n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=true
      - DB_POSTGRESDB_SCHEMA=public
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - TZ=JST-9
      - GENERIC_TIMEZONE=Asia/Tokyo
      # Custom Extensions Path, semicolon separated if multiple
      - N8N_CUSTOM_EXTENSIONS=/data/custom/n8n-nodes-add-extension-to-drive
    links:
      - postgres
    volumes:
      - ./n8n_storage:/home/node/.n8n
      - ./custom:/data/custom
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 5678:5678
    networks:
      - n8n-networks

networks:
  n8n-networks: {}

volumes:
  postgres-data:
